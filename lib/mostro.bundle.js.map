{
  "version": 3,
  "sources": ["../index.ts", "../mostro.ts", "../core.ts", "../client.ts"],
  "sourcesContent": ["export * as mostro from './mostro.ts'\nexport * as mostroCore from './core.ts'\nexport * as mostroClient from './client.ts'", "import * as core from \"./core.ts\" \nimport * as client from \"./client.ts\" \n\nexport {core, client}", "\n\nexport function hello(name: string): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function dispute(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function lib(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function message(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\n\nexport function order(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\n\nexport function rating(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\n\nexport function user(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function help(command: string): string {\n    let result = ''\n\n    switch (command) {\n        case 'dispute':\n            result = \"Handles dispute resolution logic\"\n            break;\n        case 'lib':\n            result = \"Core library utilities\";\n            break;\n        case 'message':\n            result = \"Message handling functionality\";\n            break;\n        case 'order':\n            result = \"Order management system\";\n            break;\n        case 'rating':\n            result = \"User rating implementation\";\n            break;\n        case 'user':\n            result = \"User management functionality\";\n            break;\n        default:\n            result = \"we don't have that command; Choosea supported one (dispute, lib, message, order. rating, user)\"\n    }\n    return result\n}\n\n\n\n\n\n", "\nexport function hello(name: string): string {\n\n    return `Hello ${name}! I am a cli :)`\n}\n\n\nexport function dispute(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function neworder(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function takesell(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\n\nexport function takebuy(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\n\nexport function addinvoice(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function getdm(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function fiatsent(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function release(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function cancel(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function rate(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function admcancel(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function admsettle(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function admlistdisputes(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function admaddsolver(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\nexport function admtakedispute(): string {\n\n    return `Hello ${name}! I am the core :)`\n}\n\nexport function help(command: string): string {\n    let result = ''\n    const commandList = `listorders, neworder, takesell, takebuy , addinvoice, getdm, fiatsent, release, cancel, rate, dispute, admcancel, admsettle, admlistdisputes, admaddsolver, admtakedispute`\n    switch (command) {\n        case 'listorders':\n            result = `Requests open orders from Mostro pubkey`\n            break;\n        case 'neworder':\n            result = `Create a new buy/sell order on Mostro`;\n            break;\n        case 'takesell':\n            result = `Take a sell order from a Mostro pubkey`;\n            break;\n        case 'takebuy':\n            result = `Take a buy order from a Mostro pubkey`;\n            break;\n        case 'addinvoice':\n            result = `Buyer add a new invoice to receive the payment`;\n            break;\n        case 'getdm':\n            result = `Get the latest direct messages from Mostro`;\n            break;\n        case 'fiatsent':\n            result = `Send fiat sent message to confirm payment to other user`\n            break;\n        case 'release':\n            result = `Settle the hold invoice and pay to buyer`;\n            break;\n        case 'cancel':\n            result = `Cancel a pending order`;\n            break;\n        case 'rate':\n            result = `Rate counterpart after a successful trade`;\n            break;\n        case 'dispute':\n            result = `Start a dispute`;\n            break;\n        case 'admcancel':\n            result = `Cancel an order (only admin)`;\n            break;\n        case 'admsettle':\n            result = `Settle a seller's hold invoice (only admin)`;\n            break;\n        case 'admlistdisputes':\n            result = `Requests open disputes from Mostro pubkey`;\n            break;\n        case 'admaddsolver':\n            result = `Add a new dispute's solver (only admin)`;\n            break;\n        case 'admtakedispute':\n            result = `Admin or solver take a Pending dispute (only admin)`;\n            break;\n        default:\n            result = `we don't have that command; Choosea supported one (${commandList})`\n    }\n    return result\n}\n\n\n\n\n\n\n"],
  "mappings": "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",
  "names": ["name", "dispute", "hello", "help", "hello", "name", "dispute", "help"]
}
